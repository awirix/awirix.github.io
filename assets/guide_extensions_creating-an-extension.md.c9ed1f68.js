import{_ as e,c as n,o as a,d as s}from"./app.49da8a3a.js";const g=JSON.parse('{"title":"Creating an extension","description":"","frontmatter":{},"headers":[],"relativePath":"guide/extensions/creating-an-extension.md"}'),t={name:"guide/extensions/creating-an-extension.md"},o=s(`<h1 id="creating-an-extension" tabindex="-1">Creating an extension <a class="header-anchor" href="#creating-an-extension" aria-hidden="true">#</a></h1><p>While you can manually create extension&#39;s boilerplate it&#39;s better to use built-in generator by running</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">awirix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new</span></span>
<span class="line"></span></code></pre></div><p>This command will prompt you a few questions, such as extension&#39;s name, tags, language preset and so on.</p><p>After everything is done, you will see path where extension is located.</p>`,5),i=[o];function r(c,l,p,d,_,h){return a(),n("div",null,i)}const x=e(t,[["render",r]]);export{g as __pageData,x as default};
